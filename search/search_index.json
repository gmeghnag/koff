{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"<code>koff</code>","text":"<p><code>koff</code> is a command-line tool that allows you to process kubernetes resources in <code>yaml</code> or <code>json</code> format, from either file or piped input. It reads input, performs the specific filter operations based on the flags and arguments (if provided), and writes the output in either tabular (as default), <code>json</code> or <code>yaml</code> format. </p> <pre><code>$ kubectl get pod,svc,ep -o yaml | koff\nNAME                                      READY   STATUS      RESTARTS   AGE\npod/postgresql-1-2gxpm                    1/1     Running     0          15m\npod/postgresql-1-deploy                   0/1     Completed   0          16m\npod/rails-postgresql-example-1-build      0/1     Completed   0          16m\npod/rails-postgresql-example-1-deploy     0/1     Completed   0          11m\npod/rails-postgresql-example-1-hook-pre   0/1     Completed   0          11m\npod/rails-postgresql-example-1-v89ph      1/1     Running     0          11m\n\nNAME                               TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nservice/postgresql                 ClusterIP   172.30.58.223   &lt;none&gt;        5432/TCP   16m\nservice/rails-postgresql-example   ClusterIP   172.30.114.85   &lt;none&gt;        8080/TCP   16m\n\nNAME                                 ENDPOINTS           AGE\nendpoints/postgresql                 10.129.3.75:5432    16m\nendpoints/rails-postgresql-example   10.128.2.184:8080   16m\n</code></pre>"},{"location":"#how-it-works","title":"How it works?","text":"<ul> <li>Via piped input: <pre><code>$ cat resources.yaml | koff get pod/postgresql-1-2gxpm svc/postgresql\nNAME                     READY   STATUS    RESTARTS   AGE\npod/postgresql-1-2gxpm   1/1     Running   0          15m\n\nNAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nservice/postgresql   ClusterIP   172.30.58.223   &lt;none&gt;        5432/TCP   16m\n</code></pre></li> <li>Referencing the file to use via <code>koff use &lt;resources&gt;.yaml</code> before executing <code>koff</code>:   <pre><code>$ koff use resources.yaml\n$ koff get pod/postgresql-1-2gxpm svc/postgresql\nNAME                     READY   STATUS    RESTARTS   AGE\npod/postgresql-1-2gxpm   1/1     Running   0          15m\n\nNAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nservice/postgresql   ClusterIP   172.30.58.223   &lt;none&gt;        5432/TCP   16m\n</code></pre></li> <li>Using an etcd snapshot to get the Kubernetes object contained in it via <code>koff etcd inspect</code>:   <pre><code>$ koff etcd inspect etcd_snap.db /kubernetes.io/pods/openshift-etcd/testocp-bqgqk-master-0-debug -o yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    debug.openshift.io/source-container: container-00\n    debug.openshift.io/source-resource: /v1, Resource=nodes/testocp-bqgqk-master-0\n  creationTimestamp: \"1995-01-17T00:0:00Z\"\n  ...\n  ...\n\n$ koff etcd inspect etcd_snap.db /kubernetes.io/pods/openshift-etcd/testocp-bqgqk-master-0-debug | koff\nNAME                                    READY   STATUS    RESTARTS   AGE\npod/testocp-bqgqk-master-0-debug        0/1     Pending   0          22h\n</code></pre></li> </ul> Dealing with Custom Resources <p>To return a custom resource table in its default tabular format it's needed to add the respective <code>CustomResourceDefinition</code> <code>yaml</code> manifest into the path <code>~/.koff/customresourcedefinition</code>. As default behaviour, if the <code>CustomResourceDefinition</code> for the custom resource is not found the resulting table will have three columns only: <code>NAMESPACE</code>, <code>NAME</code>, <code>CREATED AT</code>.</p> <pre><code>$ kubectl get clusteroperator etcd -o yaml | koff \nNAME                                       CREATED AT\nclusteroperator.config.openshift.io/etcd   2023-05-15T01:53:20\n\n$ kubectl get crd clusteroperators.config.openshift.io -o yaml &gt; ~/.koff/customresourcedefinitions/clusteroperators.config.openshift.io.yaml\n\n$ kubectl get clusteroperator etcd -o yaml | koff\nNAME                                       VERSION   AVAILABLE   PROGRESSING   DEGRADED   SINCE\nclusteroperator.config.openshift.io/etcd   4.9.59    True        False         False      2d\n</code></pre>"},{"location":"install/install/","title":"Install","text":""},{"location":"install/install/#download-the-latest-binary-release","title":"Download the latest binary release","text":"Darwin Linux Windows  <pre><code>curl -sL https://github.com/gmeghnag/koff/releases/latest/download/koff_Darwin_x86_64.tar.gz | tar xzf - koff\nchmod +x ./koff\n</code></pre> <pre><code>curl -sL https://github.com/gmeghnag/koff/releases/latest/download/koff_Linux_x86_64.tar.gz | tar xzf - koff\nchmod +x ./koff   \n</code></pre> <pre><code>curl.exe -sL \"https://github.com/gmeghnag/koff/releases/latest/download/koff_Windows_x86_64.zip\" -o koff.zip \ntar -xf koff.zip\n./koff.exe \n</code></pre>"},{"location":"install/install/#via-go-install","title":"Via <code>go install</code>","text":"<pre><code>go install github.com/gmeghnag/koff\n</code></pre>"},{"location":"install/install/#build-from-the-source-code","title":"Build from the source code","text":"<pre><code>git clone https://github.com/gmeghnag/koff.git\ncd koff/\ngo install github.com/gmeghnag/koff\n</code></pre>"},{"location":"install/upgrade/","title":"Upgrade","text":""},{"location":"install/upgrade/#check-for-updates","title":"Check for updates","text":"<p>It's possible to check for updates by running <code>koff upgrade</code>: <pre><code>$ koff upgrade\nkoff version is v0.9.1\n\nAvailable updates:\n\nv0.9.2\n</code></pre></p>"},{"location":"install/upgrade/#update-koff-to-a-newest-version","title":"Update <code>koff</code> to a newest version","text":"<p>This functionality works on <code>Linux x86_64</code> and <code>Darwin x86_64</code> architectures only.</p>"},{"location":"install/upgrade/#update-to-a-specific-version","title":"Update to a specific version","text":"<pre><code>koff upgrade --to=v0.9.2 \n</code></pre>"},{"location":"install/upgrade/#update-to-the-latest-version","title":"Update to the latest version","text":"<pre><code>koff upgrade --to=latest \n</code></pre>"},{"location":"subcmds/etcd/","title":"<code>koff etcd inspect &lt;etcd_snapshot_file&gt; [&lt;key&gt;]</code>","text":"<p><code>koff etcd inspect</code> allows to list all the key in a etcd snapshot: <pre><code>$ koff etcd inspect etcd_snap.db | tail -5\n/kubernetes.io/configmaps/kube-system/kube-controller-manager\n/kubernetes.io/leases/kube-system/kube-controller-manager\n/kubernetes.io/configmaps/openshift-kube-scheduler/kube-scheduler\n/kubernetes.io/leases/openshift-kube-scheduler/kube-scheduler\n/kubernetes.io/apiserver.openshift.io/apirequestcounts/validatingwebhookconfigurations.v1.admissionregistration.k8s.io\n</code></pre></p> <p>and to retrieve data from it: <pre><code>$ koff etcd inspect etcd_snap.db /kubernetes.io/configmaps/kube-system/kube-controller-manager -o yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  annotations:\n    control-plane.alpha.kubernetes.io/leader: '{\"holderIdentity\":\"ip-192-168-5-44_c49f5ead-c179-44b7-95a0-bbf24ae733fb\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2024-02-05T22:46:16Z\",\"renewTime\":\"2024-02-06T07:29:18Z\",\"leaderTransitions\":5}'\n  creationTimestamp: \"2024-02-05T22:28:17Z\"\n  managedFields:\n  - apiVersion: v1\n    fieldsType: FieldsV1\n    fieldsV1:\n      f:metadata:\n        f:annotations:\n          .: {}\n          f:control-plane.alpha.kubernetes.io/leader: {}\n    manager: kube-controller-manager\n    operation: Update\n    time: \"2024-02-06T07:29:18Z\"\n  name: kube-controller-manager\n  namespace: kube-system\n  uid: 4186c999-6e76-454b-8fa6-9dd4138d70d6\n</code></pre></p>"},{"location":"subcmds/get/","title":"<code>koff get &lt;args&gt; [&lt;flags&gt;]</code>","text":"Output format Description <code>-o=json</code> Output a JSON formatted API object <code>-o=name</code> Print only the resource name and nothing else <code>-o=wide</code> Output in the plain-text format with any additional information, and for pods, the node name is included <code>-o=yaml</code> Output a YAML formatted API object"},{"location":"subcmds/subcommands/","title":"Subcommands","text":"<p><code>koff</code> supports the following subcomands:</p> Subcommand Description <code>get</code> <code>etcd</code>"}]}